// <auto-generated />
using System;
using ListaDesejosAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListaDesejosAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240510070445_SeedProdutoCama")]
    partial class SeedProdutoCama
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ListaDesejosAPI.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Nome = "Tecnologia"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Nome = "Casa e móveis"
                        },
                        new
                        {
                            CategoriaId = 3,
                            Nome = "Esporte e fitness"
                        },
                        new
                        {
                            CategoriaId = 4,
                            Nome = "Moda"
                        },
                        new
                        {
                            CategoriaId = 5,
                            Nome = "Saúde"
                        });
                });

            modelBuilder.Entity("ListaDesejosAPI.Models.ListaDesejo", b =>
                {
                    b.Property<int>("ListaDesejoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListaDesejoId"));

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ListaDesejoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ListasDesejos");
                });

            modelBuilder.Entity("ListaDesejosAPI.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            ProdutoId = 1,
                            CategoriaId = 1,
                            Nome = "Samsung Galaxy A54 5g 128gb 8gb Branco",
                            Preco = 1699m,
                            UrlImagem = "https://http2.mlstatic.com/D_NQ_NP_2X_977800-MLU75809065020_042024-F.webp"
                        },
                        new
                        {
                            ProdutoId = 2,
                            CategoriaId = 2,
                            Nome = "Cama Box Casal Colchão D33 Pillow Top",
                            Preco = 979m,
                            UrlImagem = "https://http2.mlstatic.com/D_NQ_NP_2X_946469-MLU74984259316_032024-F.webp"
                        });
                });

            modelBuilder.Entity("ListaDesejosAPI.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ListaDesejosAPI.Models.ListaDesejo", b =>
                {
                    b.HasOne("ListaDesejosAPI.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ListaDesejosAPI.Models.Produto", b =>
                {
                    b.HasOne("ListaDesejosAPI.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
